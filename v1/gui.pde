/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void txt_comando_change(GTextField source, GEvent event) { //_CODE_:txt_comando:789189:
  //println("textfield1 - GTextField event occured " + System.currentTimeMillis()%10000000 );
} //_CODE_:txt_comando:789189:

public void btn_enter_c(GButton source, GEvent event) { //_CODE_:btn_enter:818342:
  //println("button1 - GButton event occured " + System.currentTimeMillis()%10000000 );
  int comando=Integer.parseInt(txt_comando.getText());
  switch(comando){
    case 0:
     txt_editor.setText("0");
    break;
    case 1:
      //Acciones cuando se inserta 1
    break;
    case 2:
      txt_editor.setText("Void Setup( ) {");
    break;
    case 3:
      txt_editor.setText("}");
    break;
    case 6:
      txt_editor.setText("Void Main( ){");
    break;
    case 7:
      txt_editor.setText("}");
    break;
     case 8:
      txt_editor.setText("Habilitar braile");
    break;
   case 9:
      txt_editor.setText("deshabilitar braile");
    break;
     case 15:
      txt_editor.setText("nuevo programa");
    break;
    case 17:
      txt_editor.setText("soundLine");
    break;
    case 18:
      txt_editor.setText("soundVar");
    break;
    case 19:
      txt_editor.setText("soundOper");
    break;
    case 20:
      txt_editor.setText("=");
    break;
    case 21:
      txt_editor.setText("+");
    break;
    case 22:
      txt_editor.setText("-");
    break;
    case 23:
      txt_editor.setText("*");
    break;
        case 24:
      txt_editor.setText("/");
    break;
      case 31:
      txt_editor.setText("ENTER");
    break;

    //Los demás comandos
   
 
    
    
  }
  
  
  
} //_CODE_:btn_enter:818342:

public void txt_spelling_change(GTextArea source, GEvent event) { //_CODE_:txt_spelling:782485:
  //println("textarea1 - GTextArea event occured " + System.currentTimeMillis()%10000000 );
} //_CODE_:txt_spelling:782485:

public void btn_run_click(GButton source, GEvent event) { //_CODE_:btn_run:931812:
  //println("button1 - GButton event occured " + System.currentTimeMillis()%10000000 );
} //_CODE_:btn_run:931812:

public void btn_stop_click(GButton source, GEvent event) { //_CODE_:btn_stop:402121:
  //println("button2 - GButton event occured " + System.currentTimeMillis()%10000000 );
} //_CODE_:btn_stop:402121:

public void txt_editor_change(GTextArea source, GEvent event) { //_CODE_:txt_editor:975112:
  //println("textarea2 - GTextArea event occured " + System.currentTimeMillis()%10000000 );
} //_CODE_:txt_editor:975112:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  if(frame != null)
    frame.setTitle("Proyecto I");
  pnl_insert_comandos = new GPanel(this, 0, 0, 200, 600, "Inserción de comandos");
  pnl_insert_comandos.setCollapsible(false);
  pnl_insert_comandos.setDraggable(false);
  pnl_insert_comandos.setTextBold();
  pnl_insert_comandos.setText("Inserción de comandos");
  pnl_insert_comandos.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  pnl_insert_comandos.setOpaque(true);
  pnl_insert_comandos.addEventHandler(this, "");
  pnl_comando_insert = new GPanel(this, 10, 50, 180, 150, "Comando insertado");
  pnl_comando_insert.setCollapsible(false);
  pnl_comando_insert.setDraggable(false);
  pnl_comando_insert.setTextBold();
  pnl_comando_insert.setText("Comando insertado");
  pnl_comando_insert.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  pnl_comando_insert.setOpaque(true);
  pnl_comando_insert.addEventHandler(this, "");
  txt_comando = new GTextField(this, 10, 40, 160, 30, G4P.SCROLLBARS_NONE);
  txt_comando.setOpaque(true);
  txt_comando.addEventHandler(this, "txt_comando_change");
  btn_enter = new GButton(this, 89, 100, 80, 30);
  btn_enter.setTextBold();
  btn_enter.setText("Enter");
  btn_enter.addEventHandler(this, "btn_enter_c");
  pnl_comando_insert.addControl(txt_comando);
  pnl_comando_insert.addControl(btn_enter);
  txt_spelling = new GTextArea(this, 10, 250, 180, 250, G4P.SCROLLBARS_NONE);
  txt_spelling.setLocalColorScheme(GCScheme.GOLD_SCHEME);
  txt_spelling.setOpaque(true);
  txt_spelling.addEventHandler(this, "txt_spelling_change");
  pnl_insert_comandos.addControl(pnl_comando_insert);
  pnl_insert_comandos.addControl(txt_spelling);
  pnl_ejecucion = new GPanel(this, 600, 0, 200, 600, "Ejecución");
  pnl_ejecucion.setCollapsible(false);
  pnl_ejecucion.setDraggable(false);
  pnl_ejecucion.setTextBold();
  pnl_ejecucion.setText("Ejecución");
  pnl_ejecucion.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  pnl_ejecucion.setOpaque(true);
  pnl_ejecucion.addEventHandler(this, "");
  pnl_compilador = new GPanel(this, 200, 0, 400, 600, "Compilador");
  pnl_compilador.setCollapsible(false);
  pnl_compilador.setDraggable(false);
  pnl_compilador.setTextBold();
  pnl_compilador.setText("Compilador");
  pnl_compilador.setOpaque(true);
  pnl_compilador.addEventHandler(this, "");
  btn_run = new GButton(this, 20, 50, 80, 30);
  btn_run.setTextBold();
  btn_run.setText("Run");
  btn_run.addEventHandler(this, "btn_run_click");
  btn_stop = new GButton(this, 150, 50, 80, 30);
  btn_stop.setTextBold();
  btn_stop.setText("Stop");
  btn_stop.addEventHandler(this, "btn_stop_click");
  txt_editor = new GTextArea(this, 20, 100, 360, 400, G4P.SCROLLBARS_NONE);
  txt_editor.setOpaque(true);
  txt_editor.addEventHandler(this, "txt_editor_change");
  pnl_compilador.addControl(btn_run);
  pnl_compilador.addControl(btn_stop);
  pnl_compilador.addControl(txt_editor);
}

// Variable declarations 
// autogenerated do not edit
GPanel pnl_insert_comandos; 
GPanel pnl_comando_insert; 
GTextField txt_comando; 
GButton btn_enter; 
GTextArea txt_spelling; 
GPanel pnl_ejecucion; 
GPanel pnl_compilador; 
GButton btn_run; 
GButton btn_stop; 
GTextArea txt_editor; 

